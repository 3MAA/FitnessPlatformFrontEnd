{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ema\\\\Desktop\\\\fitness-platform\\\\src\\\\pages\\\\Workout.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../pages/styles/Workout.css';\nimport Navbar2 from '../components/Navbar2';\nimport Footer from '../components/Footer';\nimport { getWorkouts } from '../services/WorkoutService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Workouts = () => {\n  _s();\n  const [workouts, setWorkouts] = useState([]); // Lista completă de workout-uri\n  const [filteredWorkouts, setFilteredWorkouts] = useState([]); // Lista filtrată de workout-uri\n  const [isLoading, setIsLoading] = useState(true); // Indicator de încărcare\n  const [workoutTypeFilter, setWorkoutTypeFilter] = useState(''); // Stare pentru filtrul de workoutType\n\n  // Funcția pentru a schimba filtru workoutType\n  const handleWorkoutTypeFilterChange = event => {\n    setWorkoutTypeFilter(event.target.value); // Setăm tipul de workout ales\n  };\n  useEffect(() => {\n    const fetchWorkouts = async () => {\n      const data = await getWorkouts(); // Obținem workout-urile din backend\n      setWorkouts(data); // Setăm workout-urile în starea principală\n      setFilteredWorkouts(data); // Inițial, toate workout-urile sunt afișate\n      setIsLoading(false); // Oprim indicatorul de încărcare\n    };\n    fetchWorkouts();\n  }, []); // Aceasta se va executa o singură dată la montarea componentei\n\n  // Filtrare workout-uri pe baza tipului ales\n  useEffect(() => {\n    if (workoutTypeFilter === '') {\n      setFilteredWorkouts(workouts); // Dacă nu există filtru, arată toate workout-urile\n    } else {\n      setFilteredWorkouts(workouts.filter(workout => workout.workoutType === workoutTypeFilter)); // Filtrăm workout-urile\n    }\n  }, [workoutTypeFilter, workouts]); // Acesta va rula de fiecare dată când workoutTypeFilter se schimbă\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading workouts...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }, this); // Mesaj de loading\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar2, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"workouts-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-workouts\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Workouts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Explore a variety of exercises to suit your fitness goals.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"workouts-filter\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"workoutType\",\n          children: \"Filter by Workout Type: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"workoutType\",\n          value: workoutTypeFilter,\n          onChange: handleWorkoutTypeFilterChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), ' ', /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Yoga\",\n            children: \"Yoga\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Cardio\",\n            children: \"Cardio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"HIIT\",\n            children: \"HIIT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Strength\",\n            children: \"Strength\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"workouts-categories\",\n        children: filteredWorkouts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No workouts found for this filter.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this) // Mesaj dacă nu există workout-uri pentru filtrul selectat\n        : filteredWorkouts.map((workout, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"workout-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: workout.workoutDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Type: \", workout.workoutType]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Difficulty: \", workout.difficultyLevel]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Duration: \", workout.workoutDuration]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Calories burned: \", workout.caloriesBurned]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Content path: \", workout.contentPath]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Workouts, \"IsJCRQx4uSgr4wMZDlArJpy/NHA=\");\n_c = Workouts;\nexport default Workouts;\nvar _c;\n$RefreshReg$(_c, \"Workouts\");","map":{"version":3,"names":["React","useState","useEffect","Navbar2","Footer","getWorkouts","jsxDEV","_jsxDEV","Workouts","_s","workouts","setWorkouts","filteredWorkouts","setFilteredWorkouts","isLoading","setIsLoading","workoutTypeFilter","setWorkoutTypeFilter","handleWorkoutTypeFilterChange","event","target","value","fetchWorkouts","data","filter","workout","workoutType","children","fileName","_jsxFileName","lineNumber","columnNumber","className","htmlFor","id","onChange","length","map","index","workoutDescription","difficultyLevel","workoutDuration","caloriesBurned","contentPath","_c","$RefreshReg$"],"sources":["C:/Users/Ema/Desktop/fitness-platform/src/pages/Workout.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../pages/styles/Workout.css';\r\nimport Navbar2 from '../components/Navbar2';\r\nimport Footer from '../components/Footer';\r\nimport { getWorkouts } from '../services/WorkoutService';\r\n\r\nconst Workouts = () => {\r\n  const [workouts, setWorkouts] = useState([]); // Lista completă de workout-uri\r\n  const [filteredWorkouts, setFilteredWorkouts] = useState([]); // Lista filtrată de workout-uri\r\n  const [isLoading, setIsLoading] = useState(true); // Indicator de încărcare\r\n  const [workoutTypeFilter, setWorkoutTypeFilter] = useState(''); // Stare pentru filtrul de workoutType\r\n\r\n  // Funcția pentru a schimba filtru workoutType\r\n  const handleWorkoutTypeFilterChange = (event) => {\r\n    setWorkoutTypeFilter(event.target.value); // Setăm tipul de workout ales\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchWorkouts = async () => {\r\n      const data = await getWorkouts(); // Obținem workout-urile din backend\r\n      setWorkouts(data); // Setăm workout-urile în starea principală\r\n      setFilteredWorkouts(data); // Inițial, toate workout-urile sunt afișate\r\n      setIsLoading(false); // Oprim indicatorul de încărcare\r\n    };\r\n\r\n    fetchWorkouts();\r\n  }, []); // Aceasta se va executa o singură dată la montarea componentei\r\n\r\n  // Filtrare workout-uri pe baza tipului ales\r\n  useEffect(() => {\r\n    if (workoutTypeFilter === '') {\r\n      setFilteredWorkouts(workouts); // Dacă nu există filtru, arată toate workout-urile\r\n    } else {\r\n      setFilteredWorkouts(\r\n        workouts.filter((workout) => workout.workoutType === workoutTypeFilter)\r\n      ); // Filtrăm workout-urile\r\n    }\r\n  }, [workoutTypeFilter, workouts]); // Acesta va rula de fiecare dată când workoutTypeFilter se schimbă\r\n\r\n  if (isLoading) {\r\n    return <div>Loading workouts...</div>; // Mesaj de loading\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Navbar2 />\r\n      <div className='workouts-container'>\r\n        <div className='header-workouts'>\r\n          <h1>Workouts</h1>\r\n          <p>Explore a variety of exercises to suit your fitness goals.</p>\r\n        </div>\r\n\r\n        {/* Filtru pentru workoutType */}\r\n        <div className='workouts-filter'>\r\n          <label htmlFor='workoutType'>Filter by Workout Type: </label>\r\n          <select\r\n            id='workoutType'\r\n            value={workoutTypeFilter}\r\n            onChange={handleWorkoutTypeFilterChange}\r\n          >\r\n            <option value=''>All</option>{' '}\r\n            {/* Permite selectarea tuturor workout-urilor */}\r\n            <option value='Yoga'>Yoga</option>\r\n            <option value='Cardio'>Cardio</option>\r\n            <option value='HIIT'>HIIT</option>\r\n            <option value='Strength'>Strength</option>\r\n            {/* Poți adăuga aici alte tipuri de workout disponibile */}\r\n          </select>\r\n        </div>\r\n\r\n        <div className='workouts-categories'>\r\n          {filteredWorkouts.length === 0 ? (\r\n            <p>No workouts found for this filter.</p> // Mesaj dacă nu există workout-uri pentru filtrul selectat\r\n          ) : (\r\n            filteredWorkouts.map((workout, index) => (\r\n              <div className='workout-card' key={index}>\r\n                <h3>{workout.workoutDescription}</h3>\r\n                <p>Type: {workout.workoutType}</p>\r\n                <p>Difficulty: {workout.difficultyLevel}</p>\r\n                <p>Duration: {workout.workoutDuration}</p>\r\n                <p>Calories burned: {workout.caloriesBurned}</p>\r\n                <p>Content path: {workout.contentPath}</p>\r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Workouts;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}